Función: 2^(-[i-4*p]/p)
Donde:
  - i = intervalo en días desde el último repaso.
  - p = factor de destreza (cuanto mayor es, mayor será el tiempo que tarde el usuario en volver a ver el término/problema).

El quid de la cuestión radica en saber cuánto aumentar p, y según qué respuesta. Si empezamos con un p = 0.0125, entonces una
respuesta de 'Perfecto' o 'Bien' podría multiplicarlo por 2.5. Luego una de 'Regular' podría aumentarlo por un 1.2. Y una de
'Mal' lo reduciría. A poder ser se pondría de vuelta en 0.0125 y, si falla, se reduce un huevo y, si no falla, entonces se reduce
poco. Algo así como darle una segunda oportunidad, puesto que no debemos olvidar que el usuario tiene cierto historial de repasos,
aunque en un momento dado no se acordara de una cierta respuesta.
    Lo ideal es que el múltiplo de aumento cambie (sea mayor) cuanto mejor capacidad tiene el usuario para retener. Así, tal vez
al principio sea un x2.5 pero tras cierto intervalo un x5, por ejemplo.
    Según voy comprobando, el p máximo debería ser de 810 y el mínimo de 0.0125. Con el primero se llega a un ~95% de retención
a los dos meses, mientras que con el segundo se ve el próximo término a los 15 minutos. Queda estimar la manera de pasar de 0.0125
a 810 mediante la selección que vaya haciendo el usuario de las tres opciones: mal, regular y bien.
